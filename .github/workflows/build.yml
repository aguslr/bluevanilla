name: Build image

on:
  schedule:
    - cron: '20 20 * * *'  # 8:20pm everyday
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.event.repository.name }}
  GITHUB_USERNAME: ${{ github.repository_owner }}
  GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        major_version: [37]
        include:
          - major_version: 37
            is_latest: true
            is_stable: true

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate tags
        id: generate-tags
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          alias_tags=()
          # Only perform the follow code when the action is spawned from a Pull Request
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            alias_tags+=("pr-${{ github.event.number }}")
          else
            # The following is run when the timer is triggered or a merge/push to main
            echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT
            alias_tags+=("${{ matrix.major_version }}")
            if [[ "${{ matrix.is_latest }}" == "true" ]]; then
              alias_tags+=("latest")
            fi
            if [[ "${{ matrix.is_stable }}" == "true" ]]; then
              alias_tags+=("stable")
            fi
          fi
          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.generate-tags.outputs.alias_tags }}
            ${{ steps.generate-tags.outputs.date }}
          build-args: |
            FEDORA_MAJOR_VERSION=${{ matrix.major_version }}
          oci: true

      - name: Push To GitHub Container registry
        uses: redhat-actions/push-to-registry@v2
        id: push-github
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ghcr.io/${{ env.GITHUB_USERNAME }}
          username: ${{ env.GITHUB_USERNAME }}
          password: ${{ env.GITHUB_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Push To Docker Hub Container registry
        uses: redhat-actions/push-to-registry@v2
        id: push-dockerhub
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: docker.io/${{ env.DOCKER_USERNAME }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          repository: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          short-description: ${{ github.event.repository.description }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"
